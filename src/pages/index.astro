---
import Frame from '../components/Frame.astro';
import Layout from '../layouts/Layout.astro';

const title = 'Astro First PR';
const description = 'Find your first PR for Astro!';
const dataID = 'contributor-usernames';
---

<Layout
  {title}
  {description}
>
  <div class="flex flex-col gap-6">
    <div class="flex flex-col gap-4">
      <h1 class="heading-3 text-white">{title}</h1>
      <div>
        <p>Remember when you contributed your first PR to Astro?</p>
        <p>
          Enter a GitHub username to show that user’s contributions to repositories in <a
            class="link-underline"
            href="https://github.com/withastro/">the <code>withastro</code> org</a
          >.
        </p>
      </div>
    </div>

    <Frame>
      <form onsubmit="return false" class="flex flex-col gap-4 sm:gap-8">
        <label for="find-contributor" class="heading-5 text-white">
          Find an Astro contributor
        </label>
        <div class="relative">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 14 14"
            class="absolute left-3 inset-y-1/2 -translate-y-1/2 w-4"
            width="16"
          >
            <path
              class="fill-neutral-200"
              d="M12.66 11.84 10.5 9.69a5.25 5.25 0 1 0-.81.81l2.15 2.15a.58.58 0 0 0 .82 0 .58.58 0 0 0 0-.81ZM6.42 10.5a4.08 4.08 0 1 1 0-8.17 4.08 4.08 0 0 1 0 8.17Z"
            ></path>
          </svg>
          <input
            type="text"
            id="find-contributor"
            placeholder="GitHub username"
            list={dataID}
            autocomplete="off"
            class="w-full input pl-10 text-white text-sm leading-4 placeholder:text-neutral-200"
          />
        </div>
      </form>

      <div
        class="grid items-center sm:py-6 px-4 rounded-lg border border-neutral-500 bg-neutral-600"
      >
        <div class="group flex flex-col gap-4 py-4 box-border" id="result-display" >
          <div>Enter a GitHub username to show that user’s first PR to repositories in the withastro org.</div>
        </div>
      </div>

    </Frame>
  </div>
</Layout>

<script>
  const searchBox = document.getElementById('find-contributor') as HTMLInputElement;
  const resultDisplay = document.getElementById('result-display') as HTMLDivElement;


  type PRDetail = {
    title: string;
    url: string;
    repoUrl: string;
    createdAt: string;
    username: string;
    avatar: string;
    status: string;
    number: number;
    repo: string;
  }

  const findPRByUsername = async (username: string): Promise<PRDetail> => {
    if (!username) return Promise.reject('No username provided!');

    const url = `https://api.github.com/search/issues?q=type:pr+org:"withastro"+author:"${username}"+-user:"liruifengv"&sort=created&order=asc&per_page=1`
    
    try {
      const res = await fetch(url).then(response => response.json())
      if (res.items.length > 0) {
        const pr = res.items[0]
        return {
          title: pr.title,
          url: pr.html_url,
          repoUrl: pr.html_url.split('/pull/').shift(),
          createdAt: pr.created_at,
          username: pr.user.login,
          avatar: pr.user.avatar_url,
          number: pr.number,
          repo: pr.repository_url.split('https://api.github.com/repos/').pop(),
          status: pr.pull_request.merged_at ? 'Merged' : pr.state === 'closed' ? 'Closed' : 'Open'
        }
      }
      return Promise.reject('Contributor not found!')
    } catch (error) {
      return Promise.reject('Contributor not found!')
    }
  };

  let to: NodeJS.Timeout | undefined;

  const resetResult = () => {
    resultDisplay.innerHTML =
      '<div>Enter a GitHub username to show that user’s first PR to repositories in the withastro org.</div>';
  };

  // 监听回车事件
  searchBox.addEventListener('keydown', (event) => {
    if (event.key === 'Enter') {
      event.preventDefault();
      if (to) {
      clearTimeout(to);
      to = undefined;
    }
    to = setTimeout(async () => {
      try {
        const input = searchBox.value.trim();
        if (!input) return resetResult();
        
        try{
          const PR = await findPRByUsername(input);
          console.log('PR', PR)

          const statusBgColor = PR.status === 'Merged' ? 'bg-[#8957e5]' : PR.status === 'Closed' ? 'bg-[#ff4d4f]' : 'bg-[#2db7f5]'

          const resultDom = `
          <div class="text-3xl">
            <a href="${PR.url}" target="__blank" class="hover:text-blue-600 text-balance break-all">
              ${PR.title} #${PR.number} 
            </a>
            to
            <a href="${PR.repoUrl}" target="__blank" class="hover:text-blue-600">
              ${PR.repo}
            </a>
          </div>
          <div class="flex gap-5">
            <div class="avatar">
              <img src="${PR.avatar}" class="w-20 h-20" alt="avatar">
            </div>
            <div class="flex-col flex-1">
              <div>${PR.username} sent this pull request in ${PR.createdAt}</div>
              <div class="inline-block mt-2 p-2 py-1 rounded-sm ${statusBgColor} text-white">${PR.status}</>
            </div>
          </div>
          `
          resultDisplay.innerHTML = resultDom;

        } catch (error: unknown) {
          throw new Error('Contributor not found!');
        }
      } catch (error: unknown) {
        resetResult();
        if (error instanceof Error) {
          console.error(error.message);
          resultDisplay.innerHTML = `<div>${error.message}</div>`;
        }        
      }
    }, 200);
    }
  });
</script>
